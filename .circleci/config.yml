version: 2.1
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
    create_infrastructure:
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: Create Cloudformation Stack
              command: |
                aws cloudformation deploy \
                  --template-file template.yml \
                  --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                  --region us-east-1
                return 1
          - destroy_environment  # Exercise: Config and Deployment
    configure_infrastructure: 
        docker:
          - image: python:3.7-alpine3.11
        steps:
          - checkout
          - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["9d:6f:00:4a:b9:fb:82:0d:95:da:fc:0d:24:b4:e1:1d"] 
          - run:
              name: Install Ansible
              command: |
                apk add --update ansible
          - run:
              name: Run Playbook and Configure server
              command: |
                ansible-playbook -i inventory main-remote.yml
      # Exercise: Smoke Testing
    smoke_test:
        docker:
          - image: alpine:latest
        steps:
          - run: apk add --update curl
          - run:
              name: smoke test
              command: |
                URL="https://thisshouldbefailed.com/"
                # Test if website exists
                if curl -s --head ${URL} 
                then
                  return 0
                else
                  return 1
                fi
          # - destroy_environment

workflows:
    myWorkflow:
      jobs:
        - create_infrastructure
        # - configure_infrastructure
        # - smoke_test:
        #     requires:
        #       - create_infrastructure